@{
    Layout = "~/Shared/_Layout.cshtml";
    Page.Title = "Edit Desk Quote";

    var db = Database.Open("MegaDesk");
    int desk_quote_id = 0;
    var customer_name = "";
    var width = 0;
    var depth = 0;
    var num_drawers = 0;
    var material = "";
    var rush_order = 0;
    var total_cost = 0.0;
    var date_added = new DateTime();

    Validation.RequireField("customer_name", "Name is required.");
    Validation.RequireField("width", "Width is required.");
    Validation.Add("width", Validator.Integer());
    Validation.Add("width", Validator.Range(24, 96));
    Validation.RequireField("depth", "Depth is required.");
    Validation.Add("depth", Validator.Integer());
    Validation.Add("depth", Validator.Range(12, 48));

    if (!IsPost)
    {
        if (!Request.QueryString["id"].IsEmpty())
        {
            desk_quote_id = Int32.Parse(Request.QueryString["id"]);
            // Console.WriteLine(desk_quote_id);
            var dbCommand = "SELECT customer_name, width, depth, num_drawers, material, rush_order, total_cost, date_added FROM Desk_Quotes WHERE desk_quote_id = @0";
            var row = db.QuerySingle(dbCommand, desk_quote_id);
            customer_name = row.customer_name;
            width = row.width;
            depth = row.depth;
            num_drawers = row.num_drawers;
            material = row.material;
            rush_order = row.rush_order;
            total_cost = row.total_cost;
            date_added = row.date_added;
        }
        else
        {
            Response.Redirect("~/index");
        }
    }

    if (IsPost)
    {
        desk_quote_id = Int32.Parse(Request.Form["desk_quote_id"]);
        customer_name = Request.Form["customer_name"];
        width = Int32.Parse(Request.Form["width"]);
        depth = Int32.Parse(Request.Form["depth"]);
        num_drawers = Int32.Parse(Request.Form["num_drawers"]);
        material = Request.Form["material"];
        rush_order = Int32.Parse(Request.Form["rush_order"]);
        date_added = DateTime.Now;

        if (Validation.IsValid())
        {
            total_cost = 0.0;
            var base_desk_price = 200.00;
            var drawer_price = 50.00 * num_drawers;
            var surface_material_price = 0.0;
            var extra_surface_area_price = 0.0;
            var rush_order_price = 0.0;
            var surface_area = width * depth;

            switch (material)
            {
                case "Oak":
                    surface_material_price = 200.00;
                    break;

                case "Laminate":
                    surface_material_price = 100.00;
                    break;

                case "Pine":
                    surface_material_price = 50.00;
                    break;

                case "Rosewood":
                    surface_material_price = 300.00;
                    break;

                case "Veneer":
                    surface_material_price = 125.00;
                    break;
            }

            if (surface_area > 1000.00)
            {
                extra_surface_area_price = surface_area - 1000.00;
            }

            switch (rush_order)
            {
                case 3:
                    if (surface_area < 1000.00)
                    {
                        rush_order_price = 60.00;
                    }
                    else if (surface_area < 2000.00)
                    {
                        rush_order_price = 70.00;
                    }
                    else if (surface_area >= 2000.00)
                    {
                        rush_order_price = 80.00;
                    }
                    break;

                case 5:
                    if (surface_area < 1000.00)
                    {
                        rush_order_price = 40.00;
                    }
                    else if (surface_area < 2000.00)
                    {
                        rush_order_price = 50.00;
                    }
                    else if (surface_area >= 2000.00)
                    {
                        rush_order_price = 60.00;
                    }
                    break;

                case 7:
                    if (surface_area < 1000.00)
                    {
                        rush_order_price = 30.00;
                    }
                    else if (surface_area < 2000.00)
                    {
                        rush_order_price = 35.00;
                    }
                    else if (surface_area >= 2000.00)
                    {
                        rush_order_price = 40.00;
                    }
                    break;
            }
            total_cost = base_desk_price + drawer_price + surface_material_price + extra_surface_area_price + rush_order_price;

            var insertCommand = "UPDATE Desk_Quotes " +
                                "SET customer_name = @0, width = @1, depth = @2, num_drawers = @3, material = @4, rush_order = @5, total_cost = @6, date_added = @7" +
                                " WHERE desk_quote_id = @8";
            db.Execute(insertCommand, customer_name, width, depth, num_drawers, material, rush_order, total_cost, date_added, desk_quote_id);
            Response.Redirect("~/searchQuotes");
        }
    }
}


<form id="update_quote" method="post">
    <div class="form-item">
        <label for="customer_name">Name:</label>
        <input id="customer_name" type="text" name="customer_name" value=@customer_name />
        @Html.ValidationMessage("customer_name")
    </div>
    <br>

    <div class="form-item">
        <label for="width">Width:</label>
        <input id="width" type="number" name="width" value=@width />
        @Html.ValidationMessage("width")
    </div>
    <br>

    <div class="form-item">
        <label for="depth">Depth:</label>
        <input id="depth" type="number" name="depth" value=@depth />
        @Html.ValidationMessage("depth")
    </div>
    <br>

    <div class="form-item">
        <label for="num_drawers">Number of Drawers:</label>
        <select id="num_drawers" name="num_drawers">
            <option value="0" selected="selected">0</option>
            <option value="1">1</option>
            <option value="2">2</option>
            <option value="3">3</option>
            <option value="4">4</option>
            <option value="5">5</option>
            <option value="6">6</option>
            <option value="7">7</option>
        </select>
    </div>
    <br>

    <div class="form-item">
        <label for="material">Material:</label>
        <select id="material" name="material">
            @foreach (var row in db.Query("SELECT * FROM Materials"))
            {
                <option value="@row.Material" name="@row.Material">@row.Material</option>
            }
        </select>
    </div>
    <br>

    <div class="form-item">
        <label for="rush_order">Rush Order Schedule:</label>
        <select id="rush_order" name="rush_order">
            <option value="0" selected="selected">Standard (14 Days)</option>
            <option value="3">3 Days</option>
            <option value="5">5 Days</option>
            <option value="7">7 Days</option>
        </select>
        <input type="hidden" name="desk_quote_id" value=@desk_quote_id />
    </div>
    <br>

    <div class="form-item">
        <input type="submit" value="Submit" />
    </div>
</form>
